-- Initial hExampleBLAS.cabal generated by cabal init.  For further 
-- documentation, see http://haskell.org/cabal/users-guide/

name:                hExampleBLAS
version:             0.1.0.0
synopsis:            The Haskell binding of example-blas for FAI.
-- description:         
homepage:            https://github.com/Qinka/HaskellFAI
license:             LGPL-3
license-file:        LICENSE
author:              Johann Lee
maintainer:          me@qinka.pro
-- copyright:           
category:            Accelerate
build-type:          Simple
extra-source-files:  ChangeLog.md
cabal-version:       >=1.10


flag enable-cuda
      default:             False
      manual:              False
      description:         Enable the Nvidia's CUDA platform.

library
  exposed-modules:     Accelerate.ExampleBLAS.ActivationFunction
                     , Accelerate.ExampleBLAS.BasicFunction
                     , Accelerate.ExampleBLAS.ExampleBLAS
                     , Accelerate.ExampleBLAS.HyperbolicFunction
                     , Accelerate.ExampleBLAS.MatrixFunction
                     , Accelerate.ExampleBLAS.TrigonometricFunction
                     , Accelerate.ExampleBLAS.LoadImg
                     , Accelerate.ExampleBLAS.Fill
                     , Accelerate.ExampleBLAS.ComputerVision
                     , Accelerate.ExampleBLAS.Wrapper
  other-modules:       Accelerate.ExampleBLAS.Binding.ActivationFunction
                     , Accelerate.ExampleBLAS.Binding.BasicFunction
                     , Accelerate.ExampleBLAS.Binding.ExampleBLAS
                     , Accelerate.ExampleBLAS.Binding.HyperbolicFunction
                     , Accelerate.ExampleBLAS.Binding.MatrixFunction
                     , Accelerate.ExampleBLAS.Binding.TrigonometricFunction
                     , Accelerate.ExampleBLAS.Binding.GenTH
                     , Accelerate.ExampleBLAS.Binding.Fill
                     , Accelerate.ExampleBLAS.Binding.ComputerVision
  -- other-extensions:    
  build-depends:       base == 4.*
                     , template-haskell
                     , FAI
                     , split
                     , JuicyPixels
                     , vector
  build-tools:         c2hs
  hs-source-dirs:      src
  default-language:    Haskell2010
  extra-libraries:     example-blas
  if (flag(enable-cuda))
     exposed-modules:     Accelerate.ExampleBLAS.LoadImg.CUDA
     cpp-options:        -D__CUDA_ENABLE
